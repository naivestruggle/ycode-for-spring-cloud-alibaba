<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.6.RELEASE</version>
    </parent>

    <groupId>com.cup</groupId>
    <artifactId>ycode-dependencies</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>ycode-dependencies</name>
    <url>http://www.cup.com</url>
    <inceptionYear>2020-Now</inceptionYear>

    <properties>
        <!-- @Begin 全局 IP 与 端口  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
        <maven-nexus.address>192.168.31.10:8081</maven-nexus.address>
        <!--<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @End -->

        <!-- @Begin Environment Settings >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!--<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @End -->

        <!-- @Begin Spring 、Alibaba Settings >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
        <spring-cloud.version>Finchley.SR2</spring-cloud.version>
        <spring-cloud-alibaba.version>0.2.1.RELEASE</spring-cloud-alibaba.version>
        <spring-boot-alibaba-druid.version>1.1.10</spring-boot-alibaba-druid.version>
        <spring-boot-tk-mybatis.version>2.1.4</spring-boot-tk-mybatis.version>
        <spring-boot-pagehelper.version>1.2.10</spring-boot-pagehelper.version>
        <!--<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @End -->

        <!-- @Begin 工具 依赖 版本管理 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
        <lombok.version>1.18.10</lombok.version>
        <!--处理json-->
        <jackson-databind.version>2.12.7.1</jackson-databind.version>
        <mysql.version>8.0.13</mysql.version>
        <!-- Swagger 生成接口文档 -->
        <swagger2.version>2.9.2</swagger2.version>
        <!--<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @End -->


        <!-- @Begin 自定义 依赖 版本控制 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
        <!--自定义的 Starter
                    整合了 Spring Cloud Alibaba + Dubbo
                    可以实现灵活使用两种同步调用方式 ：RPC 、RESTful
                -->
        <spring-cloud-alibaba-dubbo-starter.version>1.0.0-SNAPSHOT</spring-cloud-alibaba-dubbo-starter.version>
        <ycode.version>1.0.0-SNAPSHOT</ycode.version>
        <!--<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @End -->
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- @Begin Spring Cloud 相关依赖 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope> <!-- import只能在dependencyManagement的中使用，能解决maven单继承问题 -->
            </dependency>
            <!--<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @End -->

            <!-- @Begin Spring Boot >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
            <dependency> <!-- 数据库连接池 -->
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${spring-boot-alibaba-druid.version}</version>
            </dependency>
            <dependency> <!-- 简化 mybatis 开发的  -->
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>${spring-boot-tk-mybatis.version}</version>
            </dependency>
            <dependency> <!-- 分页 -->
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${spring-boot-pagehelper.version}</version>
            </dependency>
            <!--<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @End -->

            <!-- @Begin Spring Cloud Alibaba 相关依赖 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @End -->

            <!-- @Begin 工具 依赖 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
            <dependency> <!-- 生成getter setter等的插件依赖 -->
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>  <!-- 处理json -->
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-databind.version}</version>
            </dependency>
            <dependency>  <!-- mysql 驱动 -->
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <!--<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @End -->

            <!-- @Begin 自定义的 依赖 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
            <dependency>  <!-- 所有服务通用的依赖 -->
                <groupId>com.cup</groupId>
                <artifactId>ycode-commons</artifactId>
                <version>${ycode.version}</version>
            </dependency>
            <dependency> <!-- 所有服务 通用的 领域对象 -->
                <groupId>com.cup</groupId>
                <artifactId>ycode-commons-domain</artifactId>
                <version>${ycode.version}</version>
            </dependency>
            <dependency> <!-- 服务消费者 的通用依赖 -->
                <groupId>com.cup</groupId>
                <artifactId>ycode-commons-web</artifactId>
                <version>${ycode.version}</version>
            </dependency>
            <dependency> <!-- 服务提供者 的通用依赖 -->
                <groupId>com.cup</groupId>
                <artifactId>ycode-commons-service</artifactId>
                <version>${ycode.version}</version>
            </dependency>
            <dependency> <!-- 数据访问 的通用依赖 -->
                <groupId>com.cup</groupId>
                <artifactId>ycode-commons-mapper</artifactId>
                <version>${ycode.version}</version>
            </dependency>
            <dependency>  <!-- 自定义的 starter   用于 SpringCloudAlibaba与Dubbo整合-->
                <groupId>com.yc</groupId>
                <artifactId>spring-cloud-alibaba-dubbo-starter</artifactId>
                <version>${spring-cloud-alibaba-dubbo-starter.version}</version>
            </dependency>
            <!--<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @End -->

            <!-- @Begin Swagger2 生成接口文档 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger2.version}</version>
            </dependency>
            <!--<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @End -->

        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- Compiler 插件, 设定 JDK 版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>

            <!-- 打包 jar 文件时，配置 manifest 文件，加入 lib 包的 jar 依赖 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <configuration>
                            <archive>
                                <manifest>
                                    <!-- Add directory entries -->
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                    <addClasspath>true</addClasspath>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- resource -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>

            <!-- install -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
            </plugin>

            <!-- clean -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>

            <!-- ant -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
            </plugin>

            <!-- dependency -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- Java Document Generate -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <executions>
                        <execution>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- YUI Compressor (CSS/JS压缩) -->
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>yuicompressor-maven-plugin</artifactId>
                    <version>1.5.1</version>
                    <executions>
                        <execution>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>compress</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <jswarn>false</jswarn>
                        <nosuffix>true</nosuffix>
                        <linebreakpos>30000</linebreakpos>
                        <force>true</force>
                        <includes>
                            <include>**/*.js</include>
                            <include>**/*.css</include>
                        </includes>
                        <excludes>
                            <exclude>**/*.min.js</exclude>
                            <exclude>**/*.min.css</exclude>
                        </excludes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <!-- 资源文件配置 -->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
    </build>

    <repositories>

        <repository>
            <id>nexus</id>
            <name>Nexus Repository</name>
            <url>http://${maven-nexus.address}/repository/maven-public/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>

        <repository>
            <id>aliyun-repos</id>
            <name>Aliyun Repository</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>sonatype-repos</id>
            <name>Sonatype Repository</name>
            <url>https://oss.sonatype.org/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>sonatype-repos-s</id>
            <name>Sonatype Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

    </repositories>

    <pluginRepositories>

        <pluginRepository>
            <id>nexus</id>
            <name>Nexus Plugin Repository</name>
            <url>http://${maven-nexus.address}/repository/maven-public/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>

        <pluginRepository>
            <id>aliyun-repos</id>
            <name>Aliyun Repository</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <repository>
            <id>nexus-releases</id>
            <name>Nexus Release Repository</name>
            <url>http://${maven-nexus.address}/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>http://${maven-nexus.address}/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>